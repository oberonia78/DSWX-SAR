runconfig:
    name: str()

    processing:
        # Algorithms for surface water extents
        # ['opera_dswx_s1', 'twele', 'opera_dswx_s1_inundated_vegetation']
        dswx_workflow: str(required=False)

        # Polarizations to be used for DSWx-SAR
        # [polarizations] for list of specific frequency(s) e.g. [VV, VH] or [VV]
        polarizations: any(list(str(min=2, max=10), min=1, max=4), str(min=4, max=4), null(), required=False)

        # Specifiy the max_value for permanent water and no_data_value for invalid pixels
        reference_water:
            max_value: num(required=False)
            no_data_value: num(required=False)
            permanent_water_value: num(required=False)
            drought_erosion_pixel: int(required=False)
            flood_dilation_pixel: int(required=False)

        hand:
            mask_value: num(required=False)

        mosaic:
            mosaic_prefix: str(required=False)
            mosaic_cog_enable: bool(required=False)

        # Flag to turn on/off the filtering for RTC image.
        # The enhanced Lee filter is available.
        filter:
            enabled: bool(required=False)
            window_size: num(min=1, max=999, required=False)

        initial_threshold:
            # Maximum tile size for initial threshold.
            maximum_tile_size:
                x: num(required=False)
                y: num(required=False)
            # Minimum tile size for initial threshold.
            minimum_tile_size:
                x: num(required=False)
                y: num(required=False)

            # Tile selecting strategy to identify the boundary between water and nonwater
            # ['twele', 'chini', 'bimodality', 'combined']
            # 'combined' option applies all selection strategy
            selection_method: str(required=False)
            # Thresholds to select tiles showing the boundary between water and nonwater
            # three values are required for twele method
            # 1) std / mean of tiles
            # 2) min value and 3) max value of mean of subtiles / mean of tiles
            tile_selection_twele: list(required=False)
            # Thresholds to select tiles showing the boundary between water and nonwater
            # using bimodality strategy. 
            # One values are required for bimodality method
            tile_selection_bimodality: num(required=False)
            # Strategy to interpolate the tile-based thresholds.
            # Currently, only 'smoothed' is available.
            extending_method: str(required=False)
            # Thresholding algorithm for initial thresholds.
            # Currently, 1) Otsu and 2) Kittler-Illingworth algorithms are available.
            # ['otsu', 'ki', 'rg']
            threshold_method: str(required=False)
            # Flag to assume the trimodal distribution.
            # If flag is false, the distribution is assumed to have bimodal distribution and
            # estimate single threshold per tile. If True, the trimodal distribution is assumed,
            # the lowest threshold is estimated.
            multi_threshold: bool(required=False)
            # Flag to average the thresholds within the tile. 
            # The output thresholds are assigned to each tile. 
            tile_average: bool(required=False)
            number_iterations: num(required=False)
            # Number of threads to run
            # -1 represents the all available threads
            number_cpu: num(required=False)

        fuzzy_value:
            line_per_block: num(min=1, required=False)
            hand: 
                # Min and max values for hand are automatically calculated
                # from input HAND, but they are not given,
                # below values are used.
                member_min: num(required=False)
                member_max: num(required=False)
            # Membership bound for slope angle
            slope:
                member_min: num(required=False)
                member_max: num(required=False)
            # Membership bound for reference water                
            reference_water:
                # Minimum reference water value for membership
                member_min: num(required=False)
                # Maximum reference water value for membership
                member_max: num(required=False)
            # Membership bound for area of initial water bodies.
            # Area membership is only required for 'twele' workflow. 
            area:
                member_min: num(required=False)
                member_max: num(required=False)
            # Dark area is defined where cross-pol is lower than cross_land
            # Water is defined where cross-pol is lower than cross_water
            dark_area:
                # Threshold [dB] for land in the dark area definition
                cross_land: num(required=False)
                # Threshold [dB] for water in the dark area definition
                cross_water: num(required=False)
            # High frequent water is defined based on two values
            # water_min_value < high_frequent_water < water_max_value
            high_frequent_water:
                # Minimum value for high frequent water
                water_min_value: num(required=False)
                # Maximum value for high frequent water
                water_max_value: num(required=False)
                        
        region_growing:
            # Seed value for region growing start
            initial_threshold: num(min=0, max=1, required=False)
            # Value where region growing is stopped
            relaxed_threshold: num(min=0, max=1, required=False)
            line_per_block: num(min=1, required=False)

        masking_ancillary:
            land_cover_darkland_list: list(required=False)
            land_cover_darkland_extension_list: list(required=False)
            # VV and VH threshold values for dark land candidates
            co_pol_threshold: num(min=-30, max=10, required=False)
            cross_pol_threshold: num(min=-30, max=10, required=False)
            # Reference water threshold value for dark land candidates
            water_threshold: num(min=0, max=100, required=False)
            extended_darkland: bool(required=False)
            # Assuming the height of the water/land boundaries has low
            # variation, the standard deviation is estimated along the boundaries
            # and removed if the std is high. 
            hand_variation_mask: bool(required=False)
            hand_variation_threshold: num(min=0, max=100, required=False)

        refine_with_bimodality:
            number_cpu: num(required=False)
            minimum_pixel: num(min=0, required=False)
            thresholds:
                ashman: num(min=0, required=False)
                Bhattacharyya_coefficient: num(min=0, required=False)
                bm_coefficient: num(min=0, required=False)
                surface_ratio: num(min=0, required=False)

        inundated_vegetation:
            enabled: bool(required=False)
            dual_pol_ratio_max: num(min=0, max=30, required=False)
            dual_pol_ratio_min: num(min=0, max=30, required=False)
            dual_pol_ratio_threshold: num(min=0, max=30, required=False)
            cross_pol_min: num(min=-30, max=10, required=False)
            line_per_block: num(min=1, required=False)

        # If debug mode is true, intermediate product is generated. 
        debug_mode: bool(required=False)